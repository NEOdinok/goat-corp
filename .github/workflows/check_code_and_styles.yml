name: Checking code and styles

# Steps in code, styles jobs are duplicated because we can run them in parralel

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  code:
    name: ‍💻 Checking code
    runs-on: ubuntu-latest

    # Take our repo
    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v3

        # Set up node
      - name: 🐧 Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

        # Corepack for working with package managers
      - name: ⚙️ Enable corepack
        run: corepack enable

        # Install pnpm but do not install deps yet
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false

        # Create cache to avoid installing deps multiple times
        # STORE_PATH is env variable that contains downloaded packages
      - name: 💾 Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

        # Cache key
      - name: 📦 Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

        # Install deps
      - name: 🔍 Install dependencies
        run: pnpm install


        # Lint code
      - name: ✅ Check code
        run: pnpm lint:js

  # Same logic, but run styles linting at the end
  styles:
    name: 💅 Checking styles
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v3

      - name: 🐧 Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ⚙️ Enable corepack
        run: corepack enable

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false

      - name: 💾 Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 📦 Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🔍 Install dependencies
        run: pnpm install

      - name: ✅ Check styles
        run: pnpm lint:css
